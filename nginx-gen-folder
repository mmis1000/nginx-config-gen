#!/bin/bash


read -r -d '' templete <<'EOF'
server {
        listen 80;

        root SITE_ROOT;
        index index.html index.htm;

        # Make site accessible from http://localhost/
        server_name SERVER_NAME;

        location / {
                autoindex on;
                try_files $uri $uri/ =404;
        }
}
EOF

current_uid=$(id -u)
folder_path=
file_name=
site_domain=

if [ $current_uid -ne 0 ];then 
    echo 'this script require root for run!';
    exit;
fi


for (( ; ; ))
do
    read -p "What is your folder path?      : " -i "$PWD" -e folder_path
    read -p "What is your config file name? : " -i "$(basename $folder_path)" -e file_name

    for (( ; ; ))
    do
        read -p "what is your domain name?      : " -i "$file_name.$(hostname)" -e site_domain
        [[ "$site_domain" =~ ^[0-9A-Za-z\\-\\.]+$ ]] && break
    done
    
    echo 'Do you wish to use following config?'
    echo "  folder:           $folder_path"
    echo "  config file name: $file_name"
    echo "  site domain:      $site_domain"
    
    for (( ; ; ))
    do
        read -p "Confirm to continue [(Y)es/(n)o/(c)ancel] " -n 6 -r
        echo
        if [[ $REPLY =~ ^([YyNnCc]|[Yy]es|[N]o|[Cc]ancel)$ ]];then
            break
        fi
    done
    
    if [[ $REPLY =~ ^[Nn]o?$ ]];then
        continue
    elif [[ $REPLY =~ ^([Cc]|[Cc]ancel)$ ]];then
        echo 'Generation caceled'
        break
    elif [[ $REPLY =~ ^([Yy]|[Yy]es)$ ]];then
        if [ -f "/etc/nginx/sites-available/$file_name" ] || [ -f "/etc/nginx/sites-enabled/$file_name" ];
        then
            read -p "File  existed. confirm to override [y/n] " -n 1 -r
            echo
            if [[ $REPLY =~ ^[Yy]?$ ]];then
                rm "/etc/nginx/sites-available/$file_name" 2&> null
                rm "/etc/nginx/sites-enabled/$file_name" 2&> null
            else
                echo aborted
                break
            fi
        fi
        echo "$templete" > "/etc/nginx/sites-available/$file_name"
        sed -i "s#SITE_ROOT#${folder_path}#g"                      "/etc/nginx/sites-available/$file_name"
        sed -i "s#SERVER_NAME#${site_domain}#g"                    "/etc/nginx/sites-available/$file_name"
        ln -s "/etc/nginx/sites-available/$file_name" "/etc/nginx/sites-enabled/$file_name"
        echo 'Generated finished, reloading nginx...'
        nginx -s reload
        break
    fi
done